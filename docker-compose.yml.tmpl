---
services:
  traefik:
    image: 'registry.coolblock.com/coolblock/panel-proxy:__PANEL_PROXY_VERSION__'
    command:
      - '--global.checkNewVersion=false'
      - '--global.sendAnonymousUsage=false'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker'
      - '--accesslog=true'
      - '--accesslog.format=json'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.influxdb.address=:8086'
      # - '--entrypoints.backend.address=:8443'  ## uncomment this to expose internal API (insecure)
    ports:
      - '80:80'
      - '443:443'
      - '8086:8086'
      # - '8443:8443'  ## uncomment this to expose internal API (insecure)
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - 'coolblock-panel'
    restart: 'unless-stopped'

  frontend:
    image: 'registry.coolblock.com/coolblock/panel-web:__PANEL_WEB_VERSION__'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.frontend.entrypoints=websecure'
      - 'traefik.http.routers.frontend.tls=true'
      - 'traefik.http.routers.frontend-redirect.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.frontend-redirect.entrypoints=web'
      - 'traefik.http.routers.frontend-redirect.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.services.frontend.loadbalancer.server.port=3000'
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/login.html']
      interval: '30s'
      timeout: '5s'
      retries: 3
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  mysql:
    image: 'mysql:9'
    env_file:
      - '.env'
    volumes:
      - 'coolblock-panel-web-database-data:/var/lib/mysql:rw'
      - './init.sql:/docker-entrypoint-initdb.d/init.sql:ro'
    ports:
      - '127.0.0.1:3306:3306'
    networks:
      - 'coolblock-panel'

  backend:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    ## uncomment the below to expose internal API (insecure)
    # labels:
    #   - 'traefik.enable=true'
    #   - 'traefik.http.routers.backend.rule=PathPrefix(`/backend`)'
    #   - 'traefik.http.routers.backend.entrypoints=backend'
    #   - 'traefik.http.routers.backend.tls=true'
    #   - 'traefik.http.services.backend.loadbalancer.server.port=8080'
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/backend/health']
      interval: '30s'
      timeout: '5s'
      retries: 3
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  celery-worker-influxdb-read:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    command: ['celery', '-A', 'app.tasks.celery_app.celery_app', 'worker', '--loglevel=info', '--concurrency=8', '-E', '-Q', 'influxdb.read']
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  celery-worker-influxdb-write:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    command: ['celery', '-A', 'app.tasks.celery_app.celery_app', 'worker', '--loglevel=info', '--concurrency=1', '-E', '-Q', 'influxdb.write']
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  celery-worker-plc-read:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    command: ['celery', '-A', 'app.tasks.celery_app.celery_app', 'worker', '--loglevel=info', '--concurrency=4', '-E', '-Q', 'plc.read']
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  celery-worker-plc-write:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    command: ['celery', '-A', 'app.tasks.celery_app.celery_app', 'worker', '--loglevel=info', '--concurrency=1', '-E', '-Q', 'plc.write']
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 3
      restart_policy:
        condition: 'on-failure'

  celery-beat:
    image: 'registry.coolblock.com/coolblock/panel-api:__PANEL_API_VERSION__'
    command: ['celery', '-A', 'app.tasks.celery_app.celery_app', 'beat', '--loglevel=info']
    env_file:
      - '.env'
    depends_on:
      - 'mysql'
      - 'dragonfly'
      - 'influxdb'
    networks:
      - 'coolblock-panel'
    deploy:
      replicas: 1
      restart_policy:
        condition: 'on-failure'

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly:latest'
    ulimits:
      memlock: -1
    networks:
      - 'coolblock-panel'
    # healthcheck:
    #   test: ['CMD', 'redis-cli', 'ping']
    #   interval: '10s'
    #   timeout: '5s'
    #   retries: 5
    restart: 'unless-stopped'

  flower:
    image: 'mher/flower:latest'
    env_file:
      - '.env'
    depends_on:
      - 'dragonfly'
    networks:
      - 'coolblock-panel'
    restart: 'unless-stopped'

  influxdb:
    image: 'influxdb:2'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.influxdb.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.influxdb.entrypoints=influxdb'
      - 'traefik.http.routers.influxdb.tls=true'
      - 'traefik.http.services.influxdb.loadbalancer.server.port=8086'
    env_file:
      - '.env'
    networks:
      - 'coolblock-panel'
    restart: 'unless-stopped'

volumes:
  coolblock-panel-web-database-data:

networks:
  coolblock-panel:
    external: true
